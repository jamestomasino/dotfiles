#!/bin/sh

# This program takes 1 argument: a key name
# If that keyname is found in the probable locations then we check
# with lastpass to see if there's a password stored for that key
# on file. If so, we grab it, apply it, and load the key to ssh-agent.
# If no password is found we attempt to load it to ssh-agent regardless
# and hopefully it works.

# Keys are activated for 3600s (1hr)

KEY_NAME=$1
key_locations="${SSH_KEY_LOCATIONS:-$HOME/.ssh/}"

# This whole thing is built on top of lastpass's lpass command
if ! command -v lpass > /dev/null; then
  printf "LastPass CLI is required.\n"
  exit 2
fi

# There's likely a better way to use the LPASS_ASKPASS feature to do
# this instead of using "expect"
if ! command -v expect > /dev/null; then
  printf "'expect' is required.\n"
  exit 2
fi

if [ -z "${KEY_NAME}" ]; then
  printf "You need to specify a key name.\n"
  exit 2
fi

# Try to find the passed key path / name from possible key locations.
# Add space-separated path locations for your keys to $SSH_KEY_LOCATIONS
# env variable.
for path in $key_locations; do
  if [ -f "${path}${KEY_NAME}" ]; then
    printf "Found key at: %s\\n" "${path}${KEY_NAME}"
    KEY_ID="${path}${KEY_NAME}"
    break;
  fi
  if [ -d "${path}${KEY_NAME}" ]; then
    if [ -f "${path}${KEY_NAME}/id_rsa" ]; then
      printf "Found key at: %s\\n" "${path}${KEY_NAME}/id_rsa"
      KEY_ID="${path}${KEY_NAME}/id_rsa"
      break;
    fi
  fi
done

if [ -z "$KEY_ID" ]; then
  printf "Could not find key file.\n"
  exit 1
fi

# If this key is already in the agent we don't need to do anything
if ( ssh-add -l | grep -q "${KEY_ID}" ); then
  printf "Key already present.\n"
  exit 0
fi

# If not logged into lastpass, do so now
if ! lpass status -q; then
  lpass login "${LASTPASS_USER}"
fi

# Retrieve key from LastPass. If logged in but not recently authenticated
# lastpass will prompt with pinentry
PWD=$(lpass show --password "SSH: ${KEY_NAME}" 2> /dev/null)

# In case LastPass exitted non-zero we have no password
if [ -n "$PWD" ]; then
# Fill password to ssh-add utility using expect
expect <<EOF >/dev/null
spawn ssh-add -t 3600 ${KEY_ID}
expect "Enter passphrase"
send "$PWD\n"
expect eof
EOF
else
  printf "Unable to get password. Adding without password.\n"
  ssh-add -t 3600 "${KEY_ID}"
fi

# Check whether the key was added to the agent
if ( ssh-add -l | grep -q "${KEY_ID}" ); then
  printf "Key successfully added.\n"
  exit 0
else
  printf "Found passphrase but could not add key.\n"
  exit 1
fi
